// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`source view code and markdown 1`] = `
"# Code and markdown

\`\`\`typescript
class Test {}
\`\`\`

\`\`\`typescript
function foo() {
    console.log(\\"hi\\");
}
\`\`\`"
`;

exports[`source view exclude empty statement 1`] = `
"\`\`\`typescript
export interface foo {}
\`\`\`

\`\`\`typescript
function foo3() {}
\`\`\`"
`;

exports[`source view exclude import 1`] = `
"# test

\`\`\`typescript
function foo2() {}
\`\`\`"
`;

exports[`source view export type 1`] = `
"\`\`\`typescript
export type ITraverseMethodCallback = (methods: Array<ClassMethod>, class_name: string) => void;
\`\`\`

# Implementation

##  DSL

\`\`\`typescript
<ExportClassCode /> +
    function constructor(this: ExportClassCode, node: ExportNamedDeclaration, path?: NodePath<ExportNamedDeclaration>) {
        this.m_Code = node;
        this.m_Path = path;
    };
\`\`\`"
`;

exports[`source view expression statement 1`] = `
"# Class

All exported class would be recorded as \`\`\`ExportClassCode\`\`\`,

\`\`\`typescript
export class ExportClassCode {
    m_Code: ExportNamedDeclaration;
    m_Path: NodePath<ExportNamedDeclaration>;
    get m_Class() {
        return this.m_Code.declaration as ClassDeclaration;
    }
    get m_Members() {
        return this.m_Class.body.body;
    }
    get m_Name() {
        return this.m_Class.id.name;
    }
}
\`\`\`

Then, we will restore class methods and add them to class. See document of method.

\`\`\`typescript
<ExportClassCode /> +
    function AddMember(this: ExportClassCode, member: ClassMethod) {
        this.m_Members.push(member);
    };
\`\`\`

# Trivial

\`\`\`typescript
<ExportClassCode /> +
    function constructor(this: ExportClassCode, node: ExportNamedDeclaration, path?: NodePath<ExportNamedDeclaration>) {
        this.m_Code = node;
        this.m_Path = path;
    };
\`\`\`"
`;

exports[`source view handle comment 1`] = `
"leading comment of func1

\`\`\`typescript
function func1() {}
\`\`\`

trailing comment of func1 and leading comment of func2

\`\`\`typescript
function func2() {}
\`\`\`

trailing comment of func2"
`;

exports[`source view handle semi 1`] = `
"\`\`\`typescript
class Foo {}
\`\`\`

\`\`\`typescript
export interface Test {}
\`\`\`

\`\`\`typescript
<Foo /> + function constructor() {};
\`\`\`"
`;

exports[`source view remove @ts-ignore 1`] = `
"\`\`\`typescript
function ignore() {
    //other comment
    console.log(\\"hi\\");
}
\`\`\`"
`;
